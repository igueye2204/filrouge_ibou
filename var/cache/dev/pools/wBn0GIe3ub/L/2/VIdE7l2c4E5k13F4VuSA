<?php //%2528is_granted%2528%2527ROLE_APPRENANT%2527%2529%2520or%2520is_granted%2528%2527ROLE_CM%2527%2529%2529%252F%252F_api_collection_operation_name%257C_api_normalization_context%257C_api_resource_class%257C_controller%257C_firewall_context%257C_route%257C_route_params%257Cauth_checker%257Cdata%257Cobject%257Cprevious_object%257Crequest%257Croles%257Ctoken%257Ctrust_resolver%257Cuser

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\ExpressionLanguage\\ParsedExpression'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\ExpressionLanguage\\ParsedExpression')),
        clone ($p['Symfony\\Component\\ExpressionLanguage\\Node\\BinaryNode'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\ExpressionLanguage\\Node\\BinaryNode')),
        clone ($p['Symfony\\Component\\ExpressionLanguage\\Node\\FunctionNode'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\ExpressionLanguage\\Node\\FunctionNode')),
        clone ($p['Symfony\\Component\\ExpressionLanguage\\Node\\Node'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\ExpressionLanguage\\Node\\Node')),
        clone ($p['Symfony\\Component\\ExpressionLanguage\\Node\\ConstantNode'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\ExpressionLanguage\\Node\\ConstantNode')),
        clone $p['Symfony\\Component\\ExpressionLanguage\\Node\\FunctionNode'],
        clone $p['Symfony\\Component\\ExpressionLanguage\\Node\\Node'],
        clone $p['Symfony\\Component\\ExpressionLanguage\\Node\\ConstantNode'],
    ],
    null,
    [
        'Symfony\\Component\\ExpressionLanguage\\ParsedExpression' => [
            'nodes' => [
                $o[1],
            ],
        ],
        'Symfony\\Component\\ExpressionLanguage\\Expression' => [
            'expression' => [
                '(is_granted(\'ROLE_APPRENANT\') or is_granted(\'ROLE_CM\'))',
            ],
        ],
        'stdClass' => [
            'nodes' => [
                1 => [
                    'left' => $o[2],
                    'right' => $o[5],
                ],
                [
                    'arguments' => $o[3],
                ],
                [
                    $o[4],
                ],
                5 => [
                    'arguments' => $o[6],
                ],
                [
                    $o[7],
                ],
            ],
            'attributes' => [
                1 => [
                    'operator' => 'or',
                ],
                [
                    'name' => 'is_granted',
                ],
                4 => [
                    'value' => 'ROLE_APPRENANT',
                ],
                [
                    'name' => 'is_granted',
                ],
                7 => [
                    'value' => 'ROLE_CM',
                ],
            ],
        ],
        'Symfony\\Component\\ExpressionLanguage\\Node\\ConstantNode' => [
            'isIdentifier' => [
                4 => false,
                7 => false,
            ],
        ],
    ],
    $o[0],
    []
); }];
